<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PHP on Du, Chengbin's Blog</title><link>https://dcb9.github.io/tags/php/</link><description>Recent content in PHP on Du, Chengbin's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Copyright Du, Chengbin</copyright><lastBuildDate>Thu, 05 Feb 2015 00:00:00 +0800</lastBuildDate><atom:link href="https://dcb9.github.io/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>学习 PHP 程序新东西的另一种方法</title><link>https://dcb9.github.io/posts/2015-02-05-another-way-to-learning-program/</link><pubDate>Thu, 05 Feb 2015 00:00:00 +0800</pubDate><guid>https://dcb9.github.io/posts/2015-02-05-another-way-to-learning-program/</guid><description>昨天在学习 SplDoublyLinkedList 的时候发现一个有趣的现象，比如
$obj = new SplDoublyLinkedList(); $obj-&amp;gt;push(&amp;#39;string&amp;#39;); 这时候想判断 $obj 里面到底有没有值，或是不是一个，并且里面的值为 &amp;lsquo;string&amp;rsquo;，我们通常会:
print_r($obj); 然后通过肉眼去看打印出来的，确实与我们想的一致，那么我们就会认为是成功的。如果不一致就会认为是失败的。
仔细想想，这种与我们要做的测试程序不是一模一样嘛，只不过测试程序是用来检测我们的代码有没有问题，但现在由于代码是 PHP 官网这种权威组织写的，我们可以认为都是对的，现在要是写测试程序的话，就是另一层函义了，不是测试他们的代码是否有问题，而是代表我们对这个功能的认识。
经常我们会用 print_r 来打印，有时候自己会主观的认为是这样是那样，然后看的也不一定很仔细，然后就认为是对的，最后实际使用时发现不是的想的那样（我有亲身经历），写测试就是让程序来判断，我们的想法是不是有问题，哪里出错了，最主要它还可以把当时的思路保持下来，以后再继续回顾。
以下是我在学习 SplDoublyLinkedList 时写的一些测试，以后看到这个测试类，就知道了 SplDoublyLinkedList 该怎么用了。
&amp;lt;?php class SplDoublyLinkedListTest extends PHPUnit_Framework_TestCase { public function testSplDoublyLinkedListPart1() { $obj = new SplDoublyLinkedList(); // Pushes value at the end of the doubly linked list. $obj-&amp;gt;push(0); $obj-&amp;gt;push(1); $obj-&amp;gt;push(2); // Prepends value at the beginning of the doubly linked list. $obj-&amp;gt;unshift(10); $obj-&amp;gt;unshift(11); /* * 因为指针还未初始化 * 所以 * 1.</description></item></channel></rss>